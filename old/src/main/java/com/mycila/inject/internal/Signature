    private static final class Signature {
        public final Class[] parameterTypes;
        private final int hash;
        public final Method method;

        Signature(Method method) {
            this.method = method;
            this.parameterTypes = method.getParameterTypes();
            int h = method.hashCode();
            h = h * 31 + parameterTypes.length;
            for (Class parameterType : parameterTypes) {
                h = h * 31 + parameterType.hashCode();
            }
            this.hash = h;
        }

        @Override
        public int hashCode() {
            return this.hash;
        }

        @Override
        public boolean equals(Object o) {
            if (!(o instanceof Signature)) {
                return false;
            }
            Signature other = (Signature) o;
            if (!method.getName().equals(other.method.getName())) {
                return false;
            }
            if (parameterTypes.length != other.parameterTypes.length) {
                return false;
            }
            for (int i = 0; i < parameterTypes.length; i++) {
                if (parameterTypes[i] != other.parameterTypes[i]) {
                    return false;
                }
            }
            return true;
        }
    }
